import random

class RandomStockDataGenerator:

    multiplier = 1

    def get_stocks(self):
        """Get Stock Data from an API
        This function crawls data about stock prices from the webiste traderfox.de.
        It then cleans this data up and returns it in a dictionary
        """

        sample_data = [{'company_name': 'Activision Blizzard', 'wkn': 'A0Q4K4', 'value': 76.871, 'stock_change_rate': 1.24}, {'company_name': 'Adobe', 'wkn': '871981', 'value': 462.87, 'stock_change_rate': -0.76}, {'company_name': 'Advanced Micro Devices', 'wkn': '863186', 'value': 84.645, 'stock_change_rate': -1.05}, {'company_name': 'Alexion Pharmaceuticals', 'wkn': '899527', 'value': 121.392, 'stock_change_rate': -0.54}, {'company_name': 'Align Technology', 'wkn': '590375', 'value': 446.423, 'stock_change_rate': 1.15}, {'company_name': 'Alphabet', 'wkn': 'A14Y6F', 'value': 1737.194, 'stock_change_rate': -1.22}, {'company_name': 'Alphabet', 'wkn': 'A14Y6H', 'value': 1743.844, 'stock_change_rate': -1.14}, {'company_name': 'Amazon.com', 'wkn': '906866', 'value': 3099.318, 'stock_change_rate': -0.57}, {'company_name': 'Amgen', 'wkn': '867900', 'value': 223.146, 'stock_change_rate': -0.68}, {'company_name': 'Analog Devices', 'wkn': '862485', 'value': 134.808, 'stock_change_rate': -1.0}, {'company_name': 'ANSYS', 'wkn': '901492', 'value': 318.037, 'stock_change_rate': -1.88}, {'company_name': 'Apple', 'wkn': '865985', 'value': 117.337, 'stock_change_rate': -1.1}, {'company_name': 'Applied Materials', 'wkn': '865177', 'value': 76.75, 'stock_change_rate': -0.65}, {'company_name': 'ASML Holding NV', 'wkn': 'A1J85V', 'value': 423.464, 'stock_change_rate': 0.02}, {'company_name': 'Autodesk', 'wkn': '869964', 'value': 255.041, 'stock_change_rate': -0.72}, {'company_name': 'Automatic Data Processing', 'wkn': '850347', 'value': 171.325, 'stock_change_rate': -1.33}, {'company_name': 'Baidu', 'wkn': 'A0F5DE', 'value': 136.297, 'stock_change_rate': -0.13}, {'company_name': 'Biogen', 'wkn': '789617', 'value': 244.254, 'stock_change_rate': 0.1}, {'company_name': 'BioMarin Pharmaceutical', 'wkn': '924801', 'value': 75.971, 'stock_change_rate': 1.12}, {'company_name': 'Booking Holdings', 'wkn': 'A2JEXP', 'value': 1990.458, 'stock_change_rate': -1.02}, {'company_name': 'Broadcom', 'wkn': 'A2JG9Z', 'value': 383.112, 'stock_change_rate': -0.32}, {'company_name': 'Cadence Design Systems', 'wkn': '873567', 'value': 112.814, 'stock_change_rate': 0.19}, {'company_name': 'Cerner Corp', 'wkn': '892807', 'value': 73.243, 'stock_change_rate': 0.51}, {'company_name': 'Charter Communications', 'wkn': 'A2AJX9', 'value': 655.232, 'stock_change_rate': 0.72}, {'company_name': 'Check Point Software Technologies Ltd', 'wkn': '901638', 'value': 118.833, 'stock_change_rate': -0.29}, {'company_name': 'Cintas Corp', 'wkn': '880205', 'value': 362.005, 'stock_change_rate': -1.6}, {'company_name': 'Cisco Systems', 'wkn': '878841', 'value': 40.96, 'stock_change_rate': -0.51}, {'company_name': 'Citrix Systems', 'wkn': '898407', 'value': 120.4, 'stock_change_rate': -0.31}, {'company_name': 'Cognizant Technology Solutions Corp', 'wkn': '915272', 'value': 75.897, 'stock_change_rate': -0.4}, {'company_name': 'Comcast Corp', 'wkn': '157484', 'value': 49.146, 'stock_change_rate': -0.68}, {'company_name': 'Copart', 'wkn': '893807', 'value': 114.476, 'stock_change_rate': 0.57}, {'company_name': 'CoStar Group', 'wkn': '922134', 'value': 895.163, 'stock_change_rate': 0.05}, {'company_name': 'Costco Wholesale Corp', 'wkn': '888351', 'value': 381.264, 'stock_change_rate': -0.59}, {'company_name': 'CSX Corp', 'wkn': '865857', 'value': 91.571, 'stock_change_rate': -0.14}, {'company_name': 'DexCom', 'wkn': 'A0D9T1', 'value': 316.473, 'stock_change_rate': -4.28}, {'company_name': 'DocuSign', 'wkn': 'A2JHLZ', 'value': 221.467, 'stock_change_rate': 0.8}, {'company_name': 'Dollar Tree', 'wkn': 'A0NFQC', 'value': 94.938, 'stock_change_rate': 0.41}, {'company_name': 'eBay', 'wkn': '916529', 'value': 49.0, 'stock_change_rate': -1.57}, {'company_name': 'Electronic Arts', 'wkn': '878372', 'value': 121.93, 'stock_change_rate': 1.49}, {'company_name': 'Exelon Corp', 'wkn': '852011', 'value': 41.974, 'stock_change_rate': -0.89}, {'company_name': 'Expedia Group', 'wkn': 'A1JRLJ', 'value': 119.838, 'stock_change_rate': -3.33}, {'company_name': 'Facebook', 'wkn': 'A1JWVX', 'value': 269.968, 'stock_change_rate': -1.09}, {'company_name': 'Fastenal Company', 'wkn': '887891', 'value': 47.329, 'stock_change_rate': -1.36}, {'company_name': 'Fiserv', 'wkn': '881793', 'value': 113.086, 'stock_change_rate': 0.06}, {'company_name': 'Fox Corp', 'wkn': 'A2PF3K', 'value': 27.763, 'stock_change_rate': 0.19}, {'company_name': 'IDEXX Laboratories', 'wkn': '888210', 'value': 464.511, 'stock_change_rate': 1.6}, {'company_name': 'Illumina', 'wkn': '927079', 'value': 300.876, 'stock_change_rate': 0.63}, {'company_name': 'Intel Corp', 'wkn': '855681', 'value': 45.418, 'stock_change_rate': -0.44}, {'company_name': 'Intuit', 'wkn': '886053', 'value': 348.256, 'stock_change_rate': -3.65}, {'company_name': 'Intuitive Surgical', 'wkn': '888024', 'value': 731.284, 'stock_change_rate': -0.36}, {'company_name': 'JD.com', 'wkn': 'A112ST', 'value': 87.726, 'stock_change_rate': 1.96}, {'company_name': 'KLA Corp', 'wkn': '865884', 'value': 242.693, 'stock_change_rate': -0.43}, {'company_name': 'Kraft Heinz Company (The)', 'wkn': 'A14TU4', 'value': 32.292, 'stock_change_rate': 1.29}, {'company_name': 'Lam Research Corp', 'wkn': '869686', 'value': 433.802, 'stock_change_rate': -0.89}, {'company_name': 'Liberty Global plc', 'wkn': 'A1W0FL', 'value': 22.65, 'stock_change_rate': -1.78}, {'company_name': 'Liberty Global plc', 'wkn': 'A1W0FN', 'value': 21.961, 'stock_change_rate': -1.7}, {'company_name': 'lululemon athletica', 'wkn': 'A0MXBY', 'value': 345.857, 'stock_change_rate': 0.36}, {'company_name': 'Marriott International', 'wkn': '913070', 'value': 119.29, 'stock_change_rate': -1.5}, {'company_name': 'Maxim Integrated Products', 'wkn': '876158', 'value': 80.775, 'stock_change_rate': -0.5}, {'company_name': 'MercadoLibre', 'wkn': 'A0MYNP', 'value': 1417.399, 'stock_change_rate': 3.44}, {'company_name': 'Microchip Technology', 'wkn': '886105', 'value': 130.993, 'stock_change_rate': 2.73}, {'company_name': 'Micron Technology', 'wkn': '869020', 'value': 61.394, 'stock_change_rate': -0.71}, {'company_name': 'Microsoft Corp', 'wkn': '870747', 'value': 210.507, 'stock_change_rate': -0.9}, {'company_name': 'Mondelez International', 'wkn': 'A1J4U0', 'value': 57.142, 'stock_change_rate': -0.79}, {'company_name': 'Monster Beverage Corp', 'wkn': 'A14U5Z', 'value': 83.571, 'stock_change_rate': -0.19}, {'company_name': 'NetEase', 'wkn': '501822', 'value': 93.519, 'stock_change_rate': 4.82}, {'company_name': 'Netflix', 'wkn': '552484', 'value': 488.282, 'stock_change_rate': 0.75}, {'company_name': 'NVIDIA Corp', 'wkn': '918422', 'value': 524.041, 'stock_change_rate': -2.52}, {'company_name': 'NXP Semiconductors NV', 'wkn': 'A1C5WJ', 'value': 150.628, 'stock_change_rate': -0.48}, {'company_name': "O'Reilly Automotive", 'wkn': 'A1H5JY', 'value': 446.681, 'stock_change_rate': -1.04}, {'company_name': 'PACCAR', 'wkn': '861114', 'value': 88.801, 'stock_change_rate': -1.38}, {'company_name': 'Paychex', 'wkn': '868284', 'value': 90.633, 'stock_change_rate': -1.57}, {'company_name': 'PayPal Holdings', 'wkn': 'A14R7U', 'value': 192.638, 'stock_change_rate': 0.91}, {'company_name': 'PepsiCo', 'wkn': '851995', 'value': 143.362, 'stock_change_rate': 0.03}, {'company_name': 'QUALCOMM', 'wkn': '883121', 'value': 146.004, 'stock_change_rate': -1.03}, {'company_name': 'Ross Stores', 'wkn': '870053', 'value': 109.007, 'stock_change_rate': -1.08}, {'company_name': 'Seattle Genetics Inc.', 'wkn': '602322', 'value': 173.41, 'stock_change_rate': -0.55}, {'company_name': 'Sirius XM Holdings', 'wkn': 'A1W8XE', 'value': 6.441, 'stock_change_rate': 0.48}, {'company_name': 'Skyworks Solutions', 'wkn': '857760', 'value': 140.335, 'stock_change_rate': 0.7}, {'company_name': 'Splunk', 'wkn': 'A1JV4H', 'value': 199.051, 'stock_change_rate': -0.11}, {'company_name': 'Starbucks Corp', 'wkn': '884437', 'value': 97.084, 'stock_change_rate': -0.69}, {'company_name': 'Synopsys', 'wkn': '883703', 'value': 218.354, 'stock_change_rate': -1.32}, {'company_name': 'T-Mobile US', 'wkn': 'A1T7LU', 'value': 129.702, 'stock_change_rate': 0.4}, {'company_name': 'Take-Two Interactive Software', 'wkn': '914508', 'value': 170.018, 'stock_change_rate': 2.68}, {'company_name': 'Tesla', 'wkn': 'A1CX3T', 'value': 489.523, 'stock_change_rate': -1.95}, {'company_name': 'Texas Instruments', 'wkn': '852654', 'value': 156.727, 'stock_change_rate': -0.35}, {'company_name': 'Trip.com Group Limited', 'wkn': 'A2PUXF', 'value': 33.769, 'stock_change_rate': 0.26}, {'company_name': 'Ulta Beauty', 'wkn': 'A0M240', 'value': 273.834, 'stock_change_rate': -0.37}, {'company_name': 'VeriSign', 'wkn': '911090', 'value': 196.458, 'stock_change_rate': -0.5}, {'company_name': 'Verisk Analytics', 'wkn': 'A0YA2M', 'value': 204.35, 'stock_change_rate': -0.67}, {'company_name': 'Vertex Pharmaceuticals', 'wkn': '882807', 'value': 215.152, 'stock_change_rate': 1.5}, {'company_name': 'Walgreens Boots Alliance', 'wkn': 'A12HJF', 'value': 37.501, 'stock_change_rate': -0.92}, {'company_name': 'Western Digital Corp', 'wkn': '863060', 'value': 42.445, 'stock_change_rate': -0.39}, {'company_name': 'Workday', 'wkn': 'A1J39P', 'value': 209.362, 'stock_change_rate': -9.29}, {'company_name': 'Wynn Resorts Limited', 'wkn': '663244', 'value': 95.362, 'stock_change_rate': -3.43}, {'company_name': 'Xcel Energy', 'wkn': '855009', 'value': 69.301, 'stock_change_rate': -0.07}, {'company_name': 'Xilinx', 'wkn': '880135', 'value': 132.472, 'stock_change_rate': -0.37}, {'company_name': 'Zoom Video Communications', 'wkn': 'A2PGJ2', 'value': 439.784, 'stock_change_rate': 6.15}]
        stock_data = []

        self.multiplier = self.multiplier * 1.1

        for current_stock in sample_data:
            # 1. name
            # 2. wkn
            # 3. value
            # 4. stock_change_rate
            # try-except for missing data

            # add break
            company_name = current_stock["company_name"]
            wkn = current_stock["wkn"]
            value = random.randrange(700, 1000) * self.multiplier
            stock_change_rate = (random.randrange(0, 100) - 50) / 100

            

            # print(f"Raw Stock Value: Name: {raw_company_name}, wkn: {rawWkn}, value: {value}, stock_change_rate: {stock_change_rate}")

            # only if successful
            stock_data.append({
                "company_name": company_name,
                "wkn": wkn,
                "value": value,
                "stock_change_rate": stock_change_rate
            })

        return stock_data